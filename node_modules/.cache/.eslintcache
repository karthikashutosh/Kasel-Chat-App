[{"/home/karthik/Desktop/Kasel-Chat-App/src/index.js":"1","/home/karthik/Desktop/Kasel-Chat-App/src/App.js":"2","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useWindowSize.js":"3","/home/karthik/Desktop/Kasel-Chat-App/src/components/Login.js":"4","/home/karthik/Desktop/Kasel-Chat-App/src/firebase.js":"5","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useAuthUser.js":"6","/home/karthik/Desktop/Kasel-Chat-App/src/components/Sidebar.js":"7","/home/karthik/Desktop/Kasel-Chat-App/src/components/Chat.js":"8","/home/karthik/Desktop/Kasel-Chat-App/src/components/SidebarList.js":"9","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useRooms.js":"10","/home/karthik/Desktop/Kasel-Chat-App/src/components/SidebarListItem.js":"11","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useUsers.js":"12","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useChats.js":"13","/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useRoom.js":"14"},{"size":308,"mtime":1632375876296,"results":"15","hashOfConfig":"16"},{"size":775,"mtime":1632376073100,"results":"17","hashOfConfig":"16"},{"size":1416,"mtime":1622574294000,"results":"18","hashOfConfig":"16"},{"size":626,"mtime":1632293679506,"results":"19","hashOfConfig":"16"},{"size":999,"mtime":1632331601310,"results":"20","hashOfConfig":"16"},{"size":587,"mtime":1632375630148,"results":"21","hashOfConfig":"16"},{"size":4945,"mtime":1632551548162,"results":"22","hashOfConfig":"16"},{"size":321,"mtime":1632554876867,"results":"23","hashOfConfig":"16"},{"size":885,"mtime":1632544627725,"results":"24","hashOfConfig":"16"},{"size":361,"mtime":1632544404701,"results":"25","hashOfConfig":"16"},{"size":672,"mtime":1632544633121,"results":"26","hashOfConfig":"16"},{"size":580,"mtime":1632548747626,"results":"27","hashOfConfig":"16"},{"size":450,"mtime":1632550159244,"results":"28","hashOfConfig":"16"},{"size":560,"mtime":1632554883779,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15zbyg8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/karthik/Desktop/Kasel-Chat-App/src/index.js",[],["60","61"],"/home/karthik/Desktop/Kasel-Chat-App/src/App.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useWindowSize.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/components/Login.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/firebase.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useAuthUser.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/components/Sidebar.js",["62"],"import React from \"react\";\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { auth } from \"../firebase\";\nimport {\n  Add,\n  ExitToApp,\n  Home,\n  Message,\n  PeopleAlt,\n  SearchOutlined,\n} from \"@material-ui/icons\";\nimport { NavLink, Switch, Route } from \"react-router-dom\";\nimport SidebarList from \"./SidebarList\";\nimport { db, createTimestamp } from \"../firebase\";\nimport useRooms from \"../hooks/useRooms\";\nimport useUser from \"../hooks/useUsers\";\nimport useChats from \"../hooks/useChats\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\n\nexport default function Sidebar({ user, page }) {\n  const rooms = useRooms();\n  const users = useUser(user);\n  const chats = useChats(user);\n\n  console.log({ rooms });\n  const [menu, setMenu] = React.useState(1);\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  function signOut() {\n    auth.signOut();\n  }\n\n  const createRoom = () => {\n    const roomName = prompt(\"Type the New RoomName\");\n\n    if (roomName) {\n      db.collection(\"rooms\").add({\n        name: roomName,\n        timestamp: createTimestamp(),\n      });\n    }\n  };\n\n  async function searchUserandRooms(e) {\n    e.preventDefault();\n\n    const query = e.target.elements.search.value;\n\n    const userSnapshot = await db\n      .collection(\"users\")\n      .where(\"name\", \"==\", query)\n      .get();\n\n    const roomSnapshot = await db\n      .collection(\"rooms\")\n      .where(\"name\", \"==\", query)\n      .get();\n\n    const userResults = userSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n\n    const roomResults = roomSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n\n    const searchResults = [...userResults, ...roomResults];\n\n    setMenu(4);\n    setSearchResults(searchResults);\n  }\n\n  let Nav;\n  if (page.isMobile) {\n    Nav = NavLink;\n  } else {\n    Nav = (props) => (\n      <div\n        className={`${props.activeClass ? \"sidebar__menu--selected\" : \"\"}`}\n        onClick={props.onClick}\n      >\n        {props.children}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"sidebar\"\n      style={{\n        minHeight: page.isMobile ? page.height : \"auto\",\n      }}\n    >\n      <div className=\"sidebar__header\">\n        <div className=\"sidebar__header--left\">\n          <Avatar src={user?.photoURL} />\n          <h4>{user?.displayName}</h4>\n        </div>\n        <div className=\"sidebar__header--right\">\n          <IconButton onClick={signOut}>\n            <ExitToApp />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <form\n          onSubmit={searchUserandRooms}\n          className=\"sidebar__search--container\"\n        >\n          <SearchOutlined />\n          <input\n            placeholder=\"Search for user or Chat rooms\"\n            type=\"text\"\n            id=\"search\"\n          ></input>\n        </form>\n      </div>\n\n      <div className=\"sidebar__menu\">\n        <Nav\n          to=\"/chats\"\n          activeClassName=\"sidebar__menu--selected\"\n          onClick={() => setMenu(1)}\n          activeClass={menu === 1}\n        >\n          <div className=\"sidebar__menu--home\">\n            <Home />\n            <div className=\"sidebar__menu--line\" />\n          </div>\n        </Nav>\n        <Nav\n          to=\"/rooms\"\n          activeClassName=\"sidebar__menu--selected\"\n          onClick={() => setMenu(2)}\n          activeClass={menu === 2}\n        >\n          <div className=\"sidebar__menu--rooms\">\n            <Message />\n            <div className=\"sidebar__menu--line\" />\n          </div>\n        </Nav>\n        <Nav\n          to=\"/users\"\n          activeClassName=\"sidebar__menu--selected\"\n          onClick={() => setMenu(3)}\n          activeClass={menu === 3}\n        >\n          <div className=\"sidebar__menu--users\">\n            <PeopleAlt />\n            <div className=\"sidebar__menu--line\" />\n          </div>\n        </Nav>\n      </div>\n\n      {page.isMobile ? (\n        <Switch>\n          <Route path=\"/chats\">\n            <SidebarList title=\"Chats\" data={chats} />\n          </Route>\n          <Route path=\"/rooms\">\n            <SidebarList title=\"Rooms\" data={rooms} />\n          </Route>\n          <Route path=\"/users\">\n            <SidebarList title=\"Users\" data={{ users }} />\n          </Route>\n          <Route path=\"/search\">\n            <SidebarList title=\"Search Results\" data={searchResults} />\n          </Route>\n        </Switch>\n      ) : menu === 1 ? (\n        <SidebarList title=\"Chats\" data={chats} />\n      ) : menu === 2 ? (\n        <SidebarList title=\"Rooms\" data={rooms} />\n      ) : menu === 3 ? (\n        <SidebarList title=\"Users\" data={users} />\n      ) : menu === 4 ? (\n        <SidebarList title=\"Search Results\" data={searchResults} />\n      ) : null}\n\n      <div className=\"sidebar__chat--addRoom\">\n        <IconButton onClick={createRoom}>\n          <Add />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/home/karthik/Desktop/Kasel-Chat-App/src/components/Chat.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/components/SidebarList.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useRooms.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/components/SidebarListItem.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useUsers.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useChats.js",[],"/home/karthik/Desktop/Kasel-Chat-App/src/hooks/useRoom.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":23},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useCollection' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]